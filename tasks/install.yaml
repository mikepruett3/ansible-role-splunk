---
# Install tasks file for ansible-role-splunk

- name: "Test if install boolean variable is set correctly"
  ansible.builtin.assert:
    that:
      - install is defined
      - install is boolean
    quiet: yes

- name: "Create Splunk group"
  ansible.builtin.group:
    name: "{{ splunk_group }}"
    state: present

- name: "Create Splunk service account"
  ansible.builtin.user:
    name: "{{ splunk_account }}"
    comment: "Splunk Server"
    password: "{{ splunk_password }}"
    shell: /bin/bash
    group: "{{ splunk_group }}"
    state: present

- name: "Create software directory under root homedir, if it does not exist"
  ansible.builtin.file:
    path: "/root/software/splunk/"
    state: directory

- name: "Check if installer package already exist"
  ansible.builtin.stat:
    path: "/root/software/splunk/{{ package_name }}"
  register: package

- name: "Download installer package from local repository"
  ansible.builtin.get_url:
    url: "{{ software_url }}/{{ package_name }}"
    dest: "/root/software/splunk/"
    validate_certs: no
    mode: '0770'
  when:
    - not package.stat.exists | bool

- name: "Install package (yum)"
  ansible.builtin.yum:
    name: "/root/software/splunk/{{ package_name }}"
    state: present
  when:
    - ansible_facts['pkg_mgr'] == 'yum'

- name: "Install package (dnf)"
  ansible.builtin.dnf:
    name: "/root/software/splunk/{{ package_name }}"
    state: present
    disable_gpg_check: yes
  when:
    - ansible_facts['pkg_mgr'] == 'dnf'

- name: "Install package (apt)"
  ansible.builtin.apt:
    deb: "/root/software/splunk/{{ package_name }}"
    state: present
  when:
    - ansible_facts['pkg_mgr'] == 'apt'

- name: "Add SPLUNK_HOME to default user profile"
  ansible.builtin.template:
    src: splunk.j2
    dest: /etc/profile.d/splunk.sh
    owner: root
    group: root
    mode: '0644'

- name: "Create deploymentclient.conf file"
  ansible.builtin.copy:
    dest: /opt/splunkforwarder/etc/system/local/deploymentclient.conf
    owner: "{{ splunk_account }}"
    group: "{{ splunk_group }}"
    mode: '0640'
    content: |
      [target-broker:deploymentServer]
      targetUri = {{ heavy_forwarder }}

- name: "Create user-seed.conf file"
  ansible.builtin.copy:
    dest: /opt/splunkforwarder/etc/system/local/user-seed.conf
    owner: "{{ splunk_account }}"
    group: "{{ splunk_group }}"
    mode: '0640'
    content: |
      [user_info]
      USERNAME={{ splunk_account }}
      PASSWORD={{ splunk_password }}

- name: "Install the Splunk Universal Forwarder Service"
  ansible.builtin.shell:
    cmd: ./splunk start --accept-license --answer-yes --no-prompt
    chdir: /opt/splunkforwarder/bin/

- name: "Wait 5 seconds"
  ansible.builtin.wait_for:
    timeout: 5
  delegate_to: localhost

- name: "Stop the Splunk Universal Forwarder Service"
  ansible.builtin.shell:
    cmd: ./splunk stop
    chdir: /opt/splunkforwarder/bin/

#- name: "Wait 10 seconds"
#  ansible.builtin.wait_for:
#    timeout: 10
#  delegate_to: localhost
#  when:
#    - proxy | bool

- name: "Enable the Splunk Universal Forwarder Service at boot"
  ansible.builtin.shell:
    cmd: ./splunk enable boot-start -systemd-managed 1
    chdir: /opt/splunkforwarder/bin/

- name: "Test for existence server.conf"
  ansible.builtin.stat:
    path: /opt/splunkforwarder/etc/system/local/server.conf
  register: file_exists
  when:
    - proxy | bool

- name: "Update server.conf to point to Proxy Server"
  ansible.builtin.blockinfile:
    path: /opt/splunkforwarder/etc/system/local/server.conf
    insertafter: "^pass4SymmKey ="
    state: present
    block: |

      [proxyConfig]
      http_proxy = {{ proxy_protocol }}://{{ proxy_host }}
      https_proxy = {{ proxy_protocol }}://{{ proxy_host }}

  when:
    - file_exists.stat is defined
    - file_exists.stat.exists
    - proxy | bool

- name: "Start the Splunk Universal Forwarder Service"
  ansible.builtin.systemd:
    name: "{{ splunk_service }}"
    state: started
  when:
      - proxy | bool